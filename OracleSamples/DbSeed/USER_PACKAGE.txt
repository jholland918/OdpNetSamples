SET SQLBLANKLINES ON;
SET DEFINE OFF;
ALTER SESSION SET NLS_DATE_FORMAT = 'MM/DD/SYYYY HH24:MI:SS';
ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF TZH:TZM';
ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF';
ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '.,';
ALTER SESSION SET NLS_NCHAR_CONV_EXCP = FALSE;
ALTER SESSION SET TIME_ZONE = '-06:00';

--
-- Create package "SCOTT"."USER_PACKAGE"
--
-- USER_PACKAGE specification
CREATE OR REPLACE PACKAGE SCOTT.USER_PACKAGE
  AS

  /*
  Schema scoped deps:
  CREATE TYPE VARCHAR2_1000_TABLE_T AS TABLE OF VARCHAR2(1000);
  CREATE TYPE VARCHAR2_1000_VARRAY_T AS VARRAY(32767) OF VARCHAR2(1000);
  */
  TYPE VARCHAR2_2000_LIST_T IS TABLE OF VARCHAR2(2000)
    INDEX BY PLS_INTEGER;

  PROCEDURE GET_BY_ID(P_CURSOR  OUT SYS_REFCURSOR,
                      P_USER_ID IN  VARCHAR2);

  PROCEDURE INS(P_USER_ID    IN APP_USER.USER_ID % TYPE    DEFAULT NULL,
                P_FIRST_NAME IN APP_USER.FIRST_NAME % TYPE DEFAULT NULL,
                P_LAST_NAME  IN APP_USER.LAST_NAME % TYPE  DEFAULT NULL);

  PROCEDURE UPD(P_USER_ID    IN APP_USER.USER_ID % TYPE    DEFAULT NULL,
                P_FIRST_NAME IN APP_USER.FIRST_NAME % TYPE DEFAULT NULL,
                P_LAST_NAME  IN APP_USER.LAST_NAME % TYPE  DEFAULT NULL);

  PROCEDURE DEL(P_USER_ID IN APP_USER.USER_ID % TYPE);

  PROCEDURE COUNT_RECORDS(P_CURSOR OUT SYS_REFCURSOR);

  PROCEDURE GET_ALL(P_CURSOR OUT SYS_REFCURSOR);

  PROCEDURE GET_ALL_WITH_ROLES(P_CURSOR OUT SYS_REFCURSOR);

  PROCEDURE GET_BY_IDS(P_CURSOR   OUT SYS_REFCURSOR,
                       P_USER_IDS IN  DBMS_SQL.VARCHAR2_TABLE);

  PROCEDURE GET_BY_IDS2(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  DBMS_SQL.VARCHAR2_TABLE);

  PROCEDURE GET_BY_IDS3(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  VARCHAR2_2000_LIST_T);

  PROCEDURE GET_BY_IDS4(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  VARCHAR2_1000_VARRAY_T);

END USER_PACKAGE;
/
-- USER_PACKAGE body

CREATE OR REPLACE PACKAGE BODY SCOTT.USER_PACKAGE
  AS

  PROCEDURE GET_BY_ID(P_CURSOR  OUT SYS_REFCURSOR,
                      P_USER_ID IN  VARCHAR2)
    IS
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER
        WHERE USER_ID = P_USER_ID;
    END GET_BY_ID;

  PROCEDURE INS(P_USER_ID    IN APP_USER.USER_ID % TYPE    DEFAULT NULL,
                P_FIRST_NAME IN APP_USER.FIRST_NAME % TYPE DEFAULT NULL,
                P_LAST_NAME  IN APP_USER.LAST_NAME % TYPE  DEFAULT NULL)
    IS
    BEGIN
      INSERT INTO APP_USER (
        USER_ID, FIRST_NAME, LAST_NAME
      )
      VALUES (P_USER_ID, P_FIRST_NAME, P_LAST_NAME);
    END INS;

  PROCEDURE UPD(P_USER_ID    IN APP_USER.USER_ID % TYPE    DEFAULT NULL,
                P_FIRST_NAME IN APP_USER.FIRST_NAME % TYPE DEFAULT NULL,
                P_LAST_NAME  IN APP_USER.LAST_NAME % TYPE  DEFAULT NULL)
    IS
    BEGIN
      UPDATE APP_USER
        SET FIRST_NAME = P_FIRST_NAME, LAST_NAME = P_LAST_NAME
        WHERE USER_ID = P_USER_ID;
    END UPD;

  PROCEDURE DEL(P_USER_ID IN APP_USER.USER_ID % TYPE)
    IS
    BEGIN
      DELETE FROM APP_USER
        WHERE USER_ID = P_USER_ID;
    END DEL;

  PROCEDURE COUNT_RECORDS(P_CURSOR OUT SYS_REFCURSOR)
    IS
    BEGIN
      OPEN P_CURSOR FOR
      SELECT COUNT(*)
        FROM APP_USER;

    END COUNT_RECORDS;

  PROCEDURE GET_ALL(P_CURSOR OUT SYS_REFCURSOR)
    IS
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER;
    END GET_ALL;

  PROCEDURE GET_ALL_WITH_ROLES(P_CURSOR OUT SYS_REFCURSOR)
    IS
    BEGIN
      OPEN P_CURSOR FOR
      SELECT U.USER_ID,
             U.FIRST_NAME,
             U.LAST_NAME,
             R.ROLE_ID
        FROM APP_USER U
          LEFT OUTER JOIN USER_ROLE R
            ON U.USER_ID = R.USER_NAME;
    END GET_ALL_WITH_ROLES;

  -- Demonstrates usage of TO_ODCIVARCHAR2LIST()
  PROCEDURE GET_BY_IDS(P_CURSOR   OUT SYS_REFCURSOR,
                       P_USER_IDS IN  DBMS_SQL.VARCHAR2_TABLE)
    IS
      V_USER_IDS SYS.ODCIVARCHAR2LIST := CHANGE.TO_ODCIVARCHAR2LIST(P_USER_IDS);
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER
        WHERE USER_ID IN (SELECT column_value
              FROM TABLE (V_USER_IDS));
    END GET_BY_IDS;

  -- Demonstrates usage of TO_VARCHAR2_2000_TABLE_T()
  PROCEDURE GET_BY_IDS2(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  DBMS_SQL.VARCHAR2_TABLE)
    IS
      V_USER_IDS VARCHAR2_2000_TABLE_T := CHANGE.TO_VARCHAR2_2000_TABLE_T(P_USER_IDS);
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER
        WHERE USER_ID IN (SELECT column_value
              FROM TABLE (V_USER_IDS));
    END GET_BY_IDS2;

  -- Demonstrates usage of TO_VARCHAR2_2000_TABLE_T() using the VARCHAR2_2000_LIST_T input parameter
  PROCEDURE GET_BY_IDS3(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  VARCHAR2_2000_LIST_T)
    IS
      V_USER_IDS VARCHAR2_2000_TABLE_T := CHANGE.TO_VARCHAR2_2000_TABLE_T(P_USER_IDS);
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER
        WHERE USER_ID IN (SELECT column_value
              FROM TABLE (V_USER_IDS));
    END GET_BY_IDS3;

  PROCEDURE GET_BY_IDS4(P_CURSOR   OUT SYS_REFCURSOR,
                        P_USER_IDS IN  VARCHAR2_1000_VARRAY_T)
    IS
    BEGIN
      OPEN P_CURSOR FOR
      SELECT USER_ID,
             FIRST_NAME,
             LAST_NAME
        FROM APP_USER
        WHERE USER_ID IN (SELECT column_value
              FROM TABLE (P_USER_IDS));
    END GET_BY_IDS4;

END USER_PACKAGE;
/

COMMIT;
